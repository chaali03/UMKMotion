  ---
import ScrollStack, { ScrollStackItem } from "../../components/ScrollStack.jsx";
import SearchBar from "./SearchBar.astro";
---

<!-- Scroll Text Animation Section -->
<section class="scroll-text-section">
  <header class="scroll-header">
    <h1 class="fluid animate-on-scroll enhanced-title">
      <span class="line title-line-1" data-text="Bersama Kita">Bersama Kita</span>
      <br>
      <span class="line title-line-2" data-text="UMKMotion.">UMKMotion.</span>
    </h1>
  </header>
  <main class="scroll-main">
    <section class="content fluid enhanced-content">
      <h2 class="enhanced-subtitle"><span aria-hidden="true">Anda bisa&nbsp;</span>
        <span class="sr-only">Anda bisa berbagai hal dengan UMKM.</span>
      </h2>
      <ul aria-hidden="true" style="--count: 20" data-animate="true" data-snap="true" class="enhanced-list">
        <li style="--i: 0" class="list-item">kuliner.</li>
        <li style="--i: 1" class="list-item">fashion.</li>
        <li style="--i: 2" class="list-item">kerajinan.</li>
        <li style="--i: 3" class="list-item">jasa.</li>
        <li style="--i: 4" class="list-item">berkembang.</li>
        <li style="--i: 5" class="list-item">berinovasi.</li>
        <li style="--i: 6" class="list-item">berkolaborasi.</li>
        <li style="--i: 7" class="list-item">berdagang.</li>
        <li style="--i: 8" class="list-item">memasak.</li>
        <li style="--i: 9" class="list-item">menjahit.</li>
        <li style="--i: 10" class="list-item">membuat.</li>
        <li style="--i: 11" class="list-item">melayani.</li>
        <li style="--i: 12" class="list-item">menginspirasi.</li>
        <li style="--i: 13" class="list-item">mengajar.</li>
        <li style="--i: 14" class="list-item">memproduksi.</li>
        <li style="--i: 15" class="list-item">memasarkan.</li>
        <li style="--i: 16" class="list-item">bertumbuh.</li>
        <li style="--i: 17" class="list-item">berjualan.</li>
        <li style="--i: 18" class="list-item">sukses.</li>
        <li style="--i: 19" class="list-item">maju bersama.</li>
      </ul>
    </section>
  </main>
</section>

<SearchBar />



<style>
  /* Scroll Text Animation Styles */
  .scroll-text-section {
    width: 100%;
    background: transparent;
  }
  
  .scroll-header {
    min-height: 160vh;
    display: flex;
    place-items: center;
    width: 100%;
    padding-inline: clamp(1rem, 3vw, 2rem);
    padding-block: clamp(3rem, 8vh, 8rem);
    max-width: 1200px;
    margin: 0 auto;
    text-align: center;
  }
  
  .scroll-header h1 {
    text-wrap: pretty;
    line-height: clamp(0.85, 0.9, 1);
    margin: 0;
    font-weight: 900;
    background: linear-gradient(#1e293b 60%, #94a3b8);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-size: clamp(2rem, 10vw + 1rem, 10rem);
    opacity: 0;
    transform: translateY(50px);
    animation: fadeInUp 1.5s ease-out 0.5s forwards;
    position: relative;
    will-change: transform, filter, opacity;
  }
  
  @media (max-width: 768px) {
    .scroll-header h1 {
      font-size: clamp(1.5rem, 10vw, 4rem);
      line-height: 0.95;
    }
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(clamp(30px, 8vh, 50px));
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Scroll-triggered text animation (base) */
  .scroll-header h1.animate-on-scroll {
    opacity: 0;
    transform: translateY(clamp(40px, 10vh, 120px)) scale(0.96);
    filter: blur(12px) saturate(1.05);
    transition: opacity 1.8s cubic-bezier(.22,.85,.3,1), transform 2.2s cubic-bezier(.22,.85,.3,1), filter 1.6s ease;
  }
  
  /* Variant A (downward reveal + sweep L->R) */
  .scroll-header h1.animate-on-scroll.variant-a::after {
    content: '';
    position: absolute;
    inset: -8% -12%;
    background: linear-gradient(115deg, rgba(255,255,255,0) 0%, rgba(255,255,255,.5) 12%, rgba(255,255,255,0) 26%);
    transform: translateX(-160%) rotate(-3deg);
    opacity: 0;
    pointer-events: none;
  }
  
  .scroll-header h1.animate-on-scroll.in-view-a {
    opacity: 1;
    transform: translateY(0) scale(1);
    filter: blur(0);
  }
  
  .scroll-header h1.animate-on-scroll.variant-a.in-view-a::after {
    animation: titleSweep 2.1s cubic-bezier(.2,.7,.2,1) .25s forwards;
  }

  @keyframes titleSweep {
    0% { transform: translateX(-160%) rotate(-3deg); opacity: 0; }
    15% { opacity: .9; }
    100% { transform: translateX(160%) rotate(3deg); opacity: 0; }
  }

  /* Variant B (upward reveal + reverse sweep R->L + slight skew) */
  .scroll-header h1.animate-on-scroll.variant-b {
    transform: translateY(clamp(-40px, -10vh, -120px)) scale(0.96) skewY(-2deg);
    letter-spacing: .5px;
  }
  .scroll-header h1.animate-on-scroll.variant-b::before {
    content: '';
    position: absolute;
    inset: -10% -14%;
    background: linear-gradient(245deg, rgba(255,255,255,0) 0%, rgba(255,255,255,.55) 14%, rgba(255,255,255,0) 30%);
    transform: translateX(160%) rotate(3deg);
    opacity: 0;
    pointer-events: none;
  }
  .scroll-header h1.animate-on-scroll.in-view-b {
    opacity: 1;
    transform: translateY(0) scale(1) skewY(0deg);
    filter: blur(0);
  }
  .scroll-header h1.animate-on-scroll.variant-b.in-view-b::before {
    animation: titleSweepB 2.1s cubic-bezier(.2,.7,.2,1) .25s forwards;
  }
  @keyframes titleSweepB {
    0% { transform: translateX(160%) rotate(3deg); opacity: 0; }
    15% { opacity: .9; }
    100% { transform: translateX(-160%) rotate(-3deg); opacity: 0; }
  }
  
  @media (prefers-reduced-motion: reduce) {
    .scroll-header h1.animate-on-scroll,
    .scroll-header h1.animate-on-scroll.in-view-a,
    .scroll-header h1.animate-on-scroll.in-view-b,
    .scroll-header h1 { transition: none; animation: none; filter: none; transform: none; opacity: 1; }
    .scroll-header h1::after, .scroll-header h1::before { display: none; }
  }
  
  .scroll-main {
    width: 100%;
    margin-top: clamp(3rem, 12vh, 18vh); /* extra spacing so reveal lasts longer */
  }
  
  .content {
    display: flex;
    line-height: clamp(1.1, 1.25, 1.4);
    width: 100%;
    padding-inline: clamp(1rem, 3vw, 2rem);
    min-height: 200vh;
    gap: clamp(0.5rem, 2vw, 2rem);
    max-width: 1200px;
    margin: 0 auto;
    justify-content: center;
    align-items: flex-start;
  }
  
  @media (max-width: 768px) {
    .scroll-header { min-height: 110vh; padding-block: clamp(2rem, 6vh, 4rem); }
    .scroll-main { margin-top: clamp(1.5rem, 6vh, 8vh); }
    .content {
      flex-direction: column;
      gap: clamp(0.25rem, 1vw, 1rem);
      padding-left: clamp(0.5rem, 2vw, 2rem);
    }
  }
  
  .content h2 {
    position: sticky;
    top: calc(50% - 0.5lh);
    font-size: clamp(1.75rem, 6vw + 1rem, 7rem);
    margin: 0;
    display: inline-block;
    height: fit-content;
    font-weight: 700;
    background: linear-gradient(#1e293b 50%, #cbd5e1);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    flex-shrink: 0;
    text-align: right;
    min-width: clamp(180px, 22vw, 420px);
    padding-right: clamp(8px, 1vw, 16px);
  }
  
  @media (max-width: 768px) {
    .content h2 {
      font-size: clamp(1.25rem, 6vw, 3.5rem);
      position: relative;
      top: auto;
    }
  }
  
  .content ul {
    --step: calc((var(--end, 280) - var(--start, 0)) / (var(--count) - 1));
    font-weight: 700;
    padding-inline: 0;
    margin: 0;
    list-style-type: none;
    font-size: clamp(1.75rem, 6vw + 1rem, 7rem);
    scroll-snap-type: y proximity;
    flex: 1;
    white-space: nowrap; /* keep phrases in a single line */
    word-break: keep-all;
    overflow: visible;
    padding-left: clamp(12px, 3vw, 56px); /* shift list a bit to the right */
  }
  
  .content li {
    color: oklch(65% 0.25 calc(var(--start, 0) + (var(--step) * var(--i))));
    scroll-snap-align: center;
    opacity: 0.2;
    transition: opacity 0.3s ease, transform 0.3s ease;
    will-change: opacity, transform;
  }
  
  .content li:first-of-type {
    opacity: 1;
  }
  
  .content li:last-of-type {
    background: linear-gradient(#1e293b 50%, #cbd5e1);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  
  /* Scroll Animation with View Timeline */
  @supports (animation-timeline: view()) {
    [data-animate="true"] li {
      animation-name: brighten;
      animation-fill-mode: both;
      animation-timing-function: linear;
      animation-timeline: view();
      animation-range: cover calc(50% - clamp(2rem, 4vw, 3rem)) calc(50% + clamp(2rem, 4vw, 3rem));
    }
    
    @keyframes brighten {
      0% {
        opacity: 0.2;
        transform: scale(0.98);
      }
      50% {
        opacity: 1;
        filter: brightness(1.2);
        transform: scale(1);
      }
      100% {
        opacity: 0.2;
        transform: scale(0.98);
      }
    }
  }
  
  :root {
    --start: 0;
    --end: 280;
  }

  /* ScrollFloat for title lines */
  .t-line.scroll-float {
    display: inline-block;
    transform: translateY(var(--sf-y, 0)) scale(var(--sf-s, 1));
    transition: transform .2s ease-out;
    will-change: transform;
  }
</style>

<script>
  // Intersection Observer for scroll animations
  const observerOptions = {
    threshold: 0.3,
    rootMargin: '0px 0px -100px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      const el = entry.target as HTMLElement;
      // Direction-aware for the big title only
      if (el.matches('.scroll-header h1')) {
        if (entry.isIntersecting) {
          const variant = scrollDir === 'down' ? 'a' : 'b';
          el.classList.add('animate-on-scroll');
          // Reset opposing classes to allow replay
          el.classList.remove('variant-a','variant-b','in-view-a','in-view-b');
          el.classList.add(`variant-${variant}`, `in-view-${variant}`);
        } else {
          // Remove to reset when leaving viewport
          el.classList.remove('in-view-a','in-view-b','variant-a','variant-b');
        }
      } else {
        // Generic elements keep original behavior
        if (entry.isIntersecting) {
          el.classList.add('in-view');
        } else {
          el.classList.remove('in-view');
        }
      }
    });
  }, observerOptions);

  // Observe elements with scroll animation
  document.addEventListener('DOMContentLoaded', () => {
    // Track scroll direction
    let lastY = window.scrollY;
    (window as any).scrollDir = 'down';
    const dirHandler = () => {
      const y = window.scrollY;
      scrollDir = y > lastY ? 'down' : 'up';
      lastY = y;
    };
    let scrollDir: 'down' | 'up' = 'down';
    window.addEventListener('scroll', dirHandler, { passive: true });

    const animateElements = document.querySelectorAll('.animate-on-scroll');
    animateElements.forEach(el => observer.observe(el));

    // ScrollFloat JS/CSS for title lines (no external lib)
    const title = document.querySelector('.scroll-header h1');
    if (title) {
      const parts = title.innerHTML.split('<br>');
      if (parts.length === 2) {
        title.innerHTML = `<span class="t-line scroll-float t-1">${parts[0]}</span><br><span class="t-line scroll-float t-2">${parts[1]}</span>`;
      }
      const lines = Array.from(document.querySelectorAll('.t-line.scroll-float')) as HTMLElement[];
      const update = () => {
        const rect = title.getBoundingClientRect();
        const vh = window.innerHeight || 1;
        const center = vh / 2;
        const tCenter = rect.top + rect.height / 2;
        const delta = (tCenter - center) / vh; // -1..1
        lines.forEach((el, idx) => {
          const intensity = 16 + idx * 6; // slightly different per line
          const ty = Math.max(-30, Math.min(30, -delta * intensity));
          const s = 1 + Math.max(-0.03, Math.min(0.03, -delta * 0.05));
          el.style.setProperty('--sf-y', `${ty}px`);
          el.style.setProperty('--sf-s', `${s}`);
        });
      };
      update();
      window.addEventListener('scroll', update, { passive: true });
      window.addEventListener('resize', update);
    }
  });
</script>