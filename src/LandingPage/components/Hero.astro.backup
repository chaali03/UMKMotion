---
// src/pages/index.astro
import CircularGallery from "../../components/CircularGallery.jsx";

const galleryItems = [
  { 
    image: '/asset/umkm/umkm1.png', 
    text: 'UMKM 1',
    category: 'Makanan'
  },
  { 
    image: '/asset/umkm/umkm2.jpg', 
    text: 'UMKM 2',
    category: 'Kerajinan'
  },
  { 
    image: '/asset/umkm/umkm3.jpeg', 
    text: 'UMKM 3',
    category: 'Fashion'
  },
  { 
    image: '/asset/umkm/umkm4.jpeg', 
    text: 'UMKM 4',
    category: 'Teknologi'
  },
  { 
    image: '/asset/umkm/umkm5.jpg', 
    text: 'UMKM 5',
    category: 'Jasa'
  },
  { 
    image: '/asset/umkm/umkm6.jpg', 
    text: 'UMKM 6',
    category: 'Edukasi'
  },
];

const heroStats = [
  { number: '12,500+', label: 'UMKM Terdaftar', icon: 'fa-users' },
  { number: '50+', label: 'Kategori Bisnis', icon: 'fa-chart-line' },
  { number: '200+', label: 'Kota', icon: 'fa-map-marker-alt' },
];

const categories = [
  { name: 'Kuliner', emoji: 'üçú', color: '#FF6B6B' },
  { name: 'Fashion', emoji: 'üëî', color: '#4ECDC4' },
  { name: 'Kerajinan', emoji: 'üé®', color: '#FFE66D' },
  { name: 'Teknologi', emoji: 'üíª', color: '#95E1D3' },
];

---

<!-- Hero Section - UMKM Hub Exact Design -->
<section class="hero-umkm" id="hero">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  
  <!-- Image Slideshow Background -->
  <div class="image-background">
    <div class="slideshow-container">
      {galleryItems.map((item, index) => (
        <div class={`slide ${index === 0 ? 'active' : ''}`}>
          <img src={item.image} alt={item.text} />
        </div>
      ))}
    </div>
    <div class="image-overlay"></div>
  </div>

  <div class="hero-container">
    <!-- Left Content -->
    <div class="hero-left">
      <!-- Badge -->
      <div class="platform-badge">
        PLATFORM DIREKTORI UMKM INDONESIA
      </div>

      <!-- Main Headline -->
      <h1 class="hero-title">
        Temukan &<br/>
        Dukung<br/>
        <span class="highlight-cyan">UMKM Lokal</span>
      </h1>
      
      <p class="hero-description">
        Platform terlengkap untuk menemukan produk lokal, kuliner khas, kerajinan tangan, dan layanan UMKM di seluruh Indonesia
      </p>

      <!-- Search Box -->
      <div class="search-box">
        <div class="search-input-wrapper">
          <i class="fas fa-search search-icon"></i>
          <input type="text" class="search-input" placeholder="Cari UMKM, produk, atau kategori...">
          <button class="search-btn">Cari</button>
        </div>
        
        <!-- Category Pills -->
        <div class="category-pills">
          {
            categories.map((cat) => (
              <button class="category-pill">
                <span class="pill-emoji">{cat.emoji}</span>
                <span class="pill-text">{cat.name}</span>
              </button>
            ))
          }
        </div>
      </div>

      <!-- Action Buttons -->
      <div class="action-buttons">
        <button class="btn-jelajahi">
          Jelajahi UMKM
        </button>
        <button class="btn-daftar">
          Daftar Bisnis Anda
        </button>
      </div>
    </div>

    <!-- Right Stats Cards -->
    <div class="hero-right">
      <div class="stats-cards">
        {
          heroStats.map((stat, index) => (
            <div class="stat-card" data-index={index}>
              <div class="stat-icon-wrapper">
                <i class={`fas ${stat.icon}`}></i>
              </div>
              <div class="stat-info">
                <div class="stat-number">{stat.number}</div>
                <div class="stat-label">{stat.label}</div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<style>
  /* ===== UMKM HUB PURPLE THEME ===== */
  :global(*) {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  :global(html) {
    scroll-behavior: smooth;
  }

  :global(body) {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    background: #1a0b2e;
    color: #ffffff;
    overflow-x: hidden;
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
  }

  /* ===== HERO SECTION ===== */
  .hero-umkm {
    min-height: 100vh;
    position: relative;
    overflow: hidden;
    padding: 0;
    display: flex;
    align-items: center;
  }

  /* Image Slideshow Background */
  .image-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    overflow: hidden;
  }

  .slideshow-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 1.5s ease-in-out;
  }

  .slide.active {
    opacity: 1;
  }

  .slide img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  .image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, 
      rgba(75, 20, 130, 0.92) 0%,
      rgba(88, 28, 135, 0.88) 30%,
      rgba(106, 48, 147, 0.85) 60%,
      rgba(124, 58, 237, 0.80) 100%);
    z-index: 2;
  }

  .hero-container {
    max-width: 1400px;
    width: 100%;
    margin: 0 auto;
    padding: 0 5%;
    display: grid;
    grid-template-columns: 1fr 400px;
    gap: 6rem;
    align-items: center;
    position: relative;
    z-index: 10;
    min-height: 100vh;
  }

  /* ===== LEFT CONTENT ===== */
  .hero-left {
    z-index: 10;
  }

  .platform-badge {
    display: inline-block;
    padding: 0.6rem 1.5rem;
    background: rgba(56, 189, 248, 0.15);
    border: 1.5px solid rgba(56, 189, 248, 0.5);
    border-radius: 6px;
    font-size: 0.7rem;
    font-weight: 700;
    color: #38bdf8;
    letter-spacing: 0.8px;
    margin-bottom: 2rem;
    text-transform: uppercase;
  }

  .hero-title {
    font-size: clamp(3rem, 6vw, 5rem);
    font-weight: 800;
    line-height: 1.15;
    color: #ffffff;
    margin-bottom: 1.75rem;
    letter-spacing: -0.01em;
  }

  .highlight-cyan {
    color: #38bdf8;
    position: relative;
    display: inline-block;
  }

  .hero-description {
    font-size: 1.05rem;
    color: rgba(255, 255, 255, 0.9);
    line-height: 1.65;
    margin-bottom: 2rem;
    max-width: 520px;
    font-weight: 400;
  }

  /* Search Box */
  .search-box {
    background: rgba(255, 255, 255, 0.98);
    backdrop-filter: blur(10px);
    border: none;
    border-radius: 16px;
    padding: 1.75rem;
    margin-bottom: 1.5rem;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
  }

  .search-input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
    gap: 0.75rem;
    background: #f8f9fa;
    border: 1px solid #e9ecef;
    border-radius: 10px;
    padding: 0.4rem 0.4rem 0.4rem 1.25rem;
    margin-bottom: 1.25rem;
  }

  .search-icon {
    color: #6c757d;
    font-size: 1rem;
  }

  .search-input {
    flex: 1;
    border: none;
    background: transparent;
    font-size: 0.95rem;
    color: #495057;
    outline: none;
    padding: 0.65rem 0.5rem;
    font-weight: 400;
  }

  .search-input::placeholder {
    color: #adb5bd;
  }

  .search-btn {
    padding: 0.75rem 2.25rem;
    background: linear-gradient(135deg, #6f42c1 0%, #5a32a3 100%);
    color: #ffffff;
    border: none;
    border-radius: 8px;
    font-size: 0.95rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    white-space: nowrap;
    box-shadow: 0 4px 12px rgba(111, 66, 193, 0.3);
  }

  .search-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 6px 16px rgba(111, 66, 193, 0.4);
    background: linear-gradient(135deg, #7952cc 0%, #6438b5 100%);
  }

  /* Category Pills */
  .category-pills {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  .category-pill {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: transparent;
    border: 1px solid #dee2e6;
    border-radius: 6px;
    font-size: 0.85rem;
    font-weight: 500;
    color: #495057;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .category-pill:hover {
    background: #f8f9fa;
    border-color: #adb5bd;
  }

  .pill-emoji {
    font-size: 1rem;
    line-height: 1;
  }

  .pill-text {
    font-size: 0.85rem;
    font-weight: 500;
  }

  /* Action Buttons */
  .action-buttons {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    margin-top: 1.5rem;
  }

  .btn-jelajahi {
    padding: 0.85rem 2rem;
    background: linear-gradient(135deg, #00d4ff 0%, #00b8e6 100%);
    color: #ffffff;
    border: none;
    border-radius: 8px;
    font-size: 0.95rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 16px rgba(0, 212, 255, 0.35);
  }

  .btn-jelajahi:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 212, 255, 0.45);
    background: linear-gradient(135deg, #00e0ff 0%, #00c4f2 100%);
  }

  .btn-daftar {
    padding: 0.85rem 2rem;
    background: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(10px);
    color: #ffffff;
    border: 1.5px solid rgba(255, 255, 255, 0.3);
    border-radius: 8px;
    font-size: 0.95rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .btn-daftar:hover {
    background: rgba(255, 255, 255, 0.25);
    border-color: rgba(255, 255, 255, 0.5);
    transform: translateY(-2px);
  }

  /* ===== RIGHT STATS CARDS ===== */
  .hero-right {
    position: relative;
    z-index: 10;
  }

  .stats-cards {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
  }

  .stat-card {
    background: rgba(255, 255, 255, 0.12);
    backdrop-filter: blur(30px);
    border: 1px solid rgba(255, 255, 255, 0.18);
    border-radius: 16px;
    padding: 1.5rem 1.75rem;
    transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
    animation: fadeInRight 0.6s ease-out forwards;
    opacity: 0;
    display: flex;
    align-items: center;
    gap: 1.25rem;
  }

  .stat-card[data-index="0"] {
    animation-delay: 0.3s;
  }

  .stat-card[data-index="1"] {
    animation-delay: 0.5s;
  }

  .stat-card[data-index="2"] {
    animation-delay: 0.7s;
  }

  .stat-card:hover {
    background: rgba(255, 255, 255, 0.18);
    transform: translateX(-8px) scale(1.02);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.25);
    border-color: rgba(255, 255, 255, 0.25);
  }

  .stat-icon-wrapper {
    width: 52px;
    height: 52px;
    min-width: 52px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #00d4ff 0%, #0ea5e9 100%);
    border-radius: 12px;
    font-size: 1.4rem;
    color: #ffffff;
    box-shadow: 0 4px 12px rgba(0, 212, 255, 0.3);
  }

  .stat-info {
    flex: 1;
    min-width: 0;
  }

  .stat-number {
    font-size: 1.85rem;
    font-weight: 800;
    color: #ffffff;
    margin-bottom: 0.15rem;
    line-height: 1.2;
  }

  .stat-label {
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.8);
    font-weight: 500;
    line-height: 1.3;
  }

  /* ===== ANIMATIONS ===== */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeInRight {
    from {
      opacity: 0;
      transform: translateX(40px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* ===== RESPONSIVE DESIGN ===== */
  @media (max-width: 1200px) {
    .hero-container {
      grid-template-columns: 1fr 350px;
      gap: 4rem;
    }
  }

  @media (max-width: 1024px) {
    .hero-container {
      grid-template-columns: 1fr;
      gap: 3rem;
      padding: 4rem 5%;
    }

    .hero-left {
      text-align: center;
      max-width: 700px;
      margin: 0 auto;
    }

    .platform-badge {
      margin: 0 auto 2rem;
    }

    .hero-description {
      margin: 0 auto 2rem;
    }

    .search-box {
      max-width: 600px;
      margin: 0 auto 1.5rem;
    }

    .action-buttons {
      justify-content: center;
    }

    .stats-cards {
      max-width: 500px;
      margin: 0 auto;
    }
  }

  @media (max-width: 768px) {
    .hero-container {
      padding: 3rem 1.5rem;
      gap: 2.5rem;
    }

    .hero-title {
      font-size: 2.75rem;
    }

    .hero-description {
      font-size: 1rem;
    }

    .search-box {
      padding: 1.5rem;
    }

    .search-input-wrapper {
      flex-direction: column;
      align-items: stretch;
      padding: 1rem;
      gap: 0.5rem;
    }

    .search-btn {
      width: 100%;
      padding: 0.85rem;
    }

    .category-pills {
      justify-content: center;
      gap: 0.5rem;
    }

    .category-pill {
      padding: 0.45rem 0.85rem;
      font-size: 0.8rem;
    }

    .action-buttons {
      flex-direction: column;
      width: 100%;
      gap: 0.75rem;
    }

    .btn-jelajahi,
    .btn-daftar {
      width: 100%;
      padding: 0.9rem;
    }

    .stat-card {
      padding: 1.25rem 1.5rem;
    }

    .stat-number {
      font-size: 1.65rem;
    }

    .stat-icon-wrapper {
      width: 48px;
      height: 48px;
      min-width: 48px;
      font-size: 1.25rem;
    }
  }

  @media (max-width: 480px) {
    .hero-title {
      font-size: 2.25rem;
    }

    .platform-badge {
      font-size: 0.65rem;
      padding: 0.5rem 1.25rem;
    }

    .search-box {
      padding: 1.25rem;
    }

    .stat-card {
      padding: 1.15rem 1.25rem;
    }
  }

  /* CTA Buttons */
  .cta-container {
    margin-bottom: 4rem;
  }

  .cta-group {
    display: flex;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem 2rem;
    border-radius: 16px;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    border: none;
    cursor: pointer;
    font-size: 1rem;
  }

  .btn-content {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    position: relative;
    z-index: 2;
  }

  .btn-primary {
    background: linear-gradient(135deg, #FD5701 0%, #FF3366 100%);
    color: white;
    box-shadow: 
      0 8px 32px rgba(253, 87, 1, 0.3),
      0 2px 8px rgba(253, 87, 1, 0.2);
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 
      0 12px 40px rgba(253, 87, 1, 0.4),
      0 4px 16px rgba(253, 87, 1, 0.3);
  }

  .btn-shine {
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s ease;
  }

  .btn-primary:hover .btn-shine {
    left: 100%;
  }

  .btn-pulse {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    opacity: 0;
  }

  .btn-primary:active .btn-pulse {
    animation: btnPulse 0.4s ease-out;
  }

  .btn-secondary {
    background: rgba(0, 0, 0, 0.05);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(0, 0, 0, 0.1);
    color: #121212;
    transition: all 0.3s ease;
  }

  .btn-secondary:hover {
    background: rgba(0, 0, 0, 0.08);
    border-color: rgba(0, 0, 0, 0.15);
    transform: translateY(-2px);
  }

  .btn-icon {
    font-size: 1.1em;
  }

  .cta-notes {
    display: flex;
    gap: 2rem;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
  }

  .note-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: rgba(0, 0, 0, 0.7);
  }

  .note-item i {
    color: #00FF88;
    font-size: 0.75rem;
  }

  /* Stats */
  .stats-container {
    margin-top: 3rem;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 2rem;
    max-width: 600px;
    margin: 0 auto;
  }

  .stat-item {
    text-align: center;
    position: relative;
  }

  .stat-number {
    font-size: 2rem;
    font-weight: 800;
    color: #121212;
    margin-bottom: 0.5rem;
  }

  .stat-label {
    font-size: 0.875rem;
    color: rgba(0, 0, 0, 0.6);
    font-weight: 500;
  }

  .stat-bar {
    position: absolute;
    bottom: -10px;
    left: 25%;
    width: 50%;
    height: 2px;
    background: linear-gradient(90deg, transparent, #FD5701, transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .stat-item:hover .stat-bar {
    opacity: 1;
  }

  /* Gallery Container */
  .gallery-container {
    position: relative;
    margin-top: 4rem;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .modern-gallery {
    position: relative;
    z-index: 5;
  }

  .gallery-glow {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    height: 200px;
    background: radial-gradient(ellipse 50% 50% at 50% 50%, rgba(253, 87, 1, 0.1) 0%, transparent 70%);
    filter: blur(40px);
    z-index: 1;
  }

  .gallery-orbits {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 120%;
    height: 120%;
  }

  .orbit {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    animation: orbitRotate linear infinite;
  }

  .orbit-1 {
    width: 100%;
    height: 100%;
    animation-duration: 40s;
  }

  .orbit-2 {
    width: 80%;
    height: 80%;
    animation-duration: 30s;
    animation-direction: reverse;
  }

  .orbit-3 {
    width: 60%;
    height: 60%;
    animation-duration: 20s;
  }



  /* ===== ANIMATIONS ===== */
  @keyframes orbFloat {
    0%, 100% {
      transform: translate(0, 0) scale(1);
    }
    25% {
      transform: translate(20px, -20px) scale(1.05);
    }
    50% {
      transform: translate(-15px, 15px) scale(0.95);
    }
    75% {
      transform: translate(-20px, -15px) scale(1.02);
    }
  }

  @keyframes badgePulse {
    0%, 100% {
      opacity: 1;
      transform: translateY(-50%) scale(1);
    }
    50% {
      opacity: 0.7;
      transform: translateY(-50%) scale(1.2);
    }
  }

  @keyframes glowPulse {
    0%, 100% {
      opacity: 0.3;
      transform: translate(-50%, -50%) scale(1);
    }
    50% {
      opacity: 0.5;
      transform: translate(-50%, -50%) scale(1.1);
    }
  }

  @keyframes btnPulse {
    0% {
      width: 0;
      height: 0;
      opacity: 0.7;
    }
    100% {
      width: 200px;
      height: 200px;
      opacity: 0;
    }
  }

  @keyframes orbitRotate {
    from {
      transform: translate(-50%, -50%) rotate(0deg);
    }
    to {
      transform: translate(-50%, -50%) rotate(360deg);
    }
  }

  @keyframes scrollProgress {
    0% {
      transform: translateY(-100%);
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      transform: translateY(200%);
      opacity: 0;
    }
  }

  /* Entrance Animations */
  .animate-fade-in {
    opacity: 0;
    animation: fadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  .animate-fade-up {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  .animate-scale-in {
    opacity: 0;
    transform: scale(0.8);
    animation: scaleIn 1s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }

  .animate-bounce {
    animation: bounce 2s ease-in-out infinite;
  }

  @keyframes fadeIn {
    to {
      opacity: 1;
    }
  }

  @keyframes fadeUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scaleIn {
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateX(-50%) translateY(0);
    }
    40% {
      transform: translateX(-50%) translateY(-10px);
    }
    60% {
      transform: translateX(-50%) translateY(-5px);
    }
  }

  /* ===== RESPONSIVE DESIGN ===== */
  @media (min-width: 768px) {
    .desktop-only {
      display: inline;
    }

    .hero-container {
      padding: 0 3rem;
    }

    .headline-container {
      margin-bottom: 3rem;
    }

    .cta-group {
      flex-wrap: nowrap;
    }

    .stats-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .hero-content {
      padding: 4rem 0;
    }

    .headline-main,
    .headline-accent {
      font-size: clamp(3rem, 6vw, 6rem);
    }

    .subheadline {
      margin-bottom: 4rem;
    }

    .gallery-container {
      margin-top: 6rem;
    }
  }

  @media (max-width: 767px) {
    .hero-container {
      padding: 0 1.5rem;
    }

    .btn {
      padding: 0.875rem 1.5rem;
      font-size: 0.9rem;
    }

    .cta-group {
      flex-direction: column;
      width: 100%;
    }

    .btn {
      width: 100%;
      max-width: 280px;
      justify-content: center;
    }

    .stats-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .cta-notes {
      flex-direction: column;
      gap: 1rem;
    }

    .scroll-indicator {
      bottom: 2rem;
    }
  }

  @media (max-width: 480px) {
    .hero-container {
      padding: 0 1rem;
    }

    .headline-main,
    .headline-accent {
      font-size: clamp(2rem, 8vw, 3rem);
    }

    .badge-content {
      padding: 0.5rem 1rem;
      font-size: 0.75rem;
    }

    .btn {
      padding: 0.75rem 1.25rem;
    }

    .gallery-container {
      margin-top: 3rem;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .btn-primary {
      background: #FD5701;
      border: 2px solid white;
    }
    
    .btn-secondary {
      background: black;
      border: 2px solid white;
    }
  }

  /* Dark mode support (already dark, but for consistency) */
  @media (prefers-color-scheme: dark) {
    .hero {
      background: #0a0a0a;
    }
  }
</style>

<script>
  // Image Slideshow
  let currentSlide = 0;
  const slides = document.querySelectorAll('.slide');
  const totalSlides = slides.length;

  function showSlide(index: number) {
    slides.forEach((slide, i) => {
      if (i === index) {
        slide.classList.add('active');
      } else {
        slide.classList.remove('active');
      }
    });
  }

  function nextSlide() {
    currentSlide = (currentSlide + 1) % totalSlides;
    showSlide(currentSlide);
  }

  // Change slide every 4 seconds
  setInterval(nextSlide, 4000);

  // Enhanced animation initialization
  document.addEventListener('DOMContentLoaded', function() {
    // Stagger animations with Intersection Observer
    const animateOnScroll = () => {
      const elements = document.querySelectorAll<HTMLElement>('[data-delay]');
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const delayAttr = (entry.target as HTMLElement).getAttribute('data-delay');
            const delay = parseInt(delayAttr || '0') || 0;
            setTimeout(() => {
              (entry.target as HTMLElement).style.animationPlayState = 'running';
            }, delay);
            observer.unobserve(entry.target);
          }
        });
      }, {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      });

      elements.forEach((el) => {
        el.style.animationPlayState = 'paused';
        observer.observe(el);
      });
    };

    // Initialize stats counter animation
    const initStatsCounter = () => {
      const statItems = document.querySelectorAll<HTMLElement>('.stat-item');
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const statNumber = (entry.target as HTMLElement).querySelector<HTMLElement>('.stat-number');
            const finalValue = statNumber?.textContent || '';
            if (!statNumber || !finalValue) {
              observer.unobserve(entry.target);
              return;
            }

            const numeric = parseInt(finalValue.replace(/[^\d]/g, ''), 10) || 0;
            const hasPercent = finalValue.includes('%');
            const hasPlus = finalValue.includes('+');

            let current = 0;
            const steps = 30;
            const increment = Math.max(1, Math.ceil(numeric / steps));
            const timer = setInterval(() => {
              current += increment;
              if (current >= numeric) {
                statNumber.textContent = numeric.toString() + (hasPercent ? '%' : (hasPlus ? '+' : ''));
                clearInterval(timer);
              } else {
                statNumber.textContent = Math.floor(current).toString() + (hasPercent ? '%' : (hasPlus ? '+' : ''));
              }
            }, 50);
            
            observer.unobserve(entry.target);
          }
        });
      }, { threshold: 0.5 });

      statItems.forEach((item) => observer.observe(item));
    };

    // Parallax effect for background elements
    const initParallax = () => {
      const orbs = document.querySelectorAll<HTMLElement>('.gradient-orb');
      
      window.addEventListener('mousemove', (e: MouseEvent) => {
        const x = (e.clientX / window.innerWidth - 0.5) * 20;
        const y = (e.clientY / window.innerHeight - 0.5) * 20;
        
        orbs.forEach((orb, index) => {
          const speed = (index + 1) * 0.5;
          (orb as HTMLElement).style.transform = `translate(${x * speed}px, ${y * speed}px)`;
        });
      });
    };

    // Initialize all effects
    animateOnScroll();
    initStatsCounter();
    
    // Only init parallax on desktop
    if (window.innerWidth > 768) {
      initParallax();
    }

    // Handle resize
    window.addEventListener('resize', () => {
      if (window.innerWidth > 768) {
        initParallax();
      }
    });

    // Add loading state
    document.body.classList.add('loaded');
  });

  // Smooth scrolling for anchor links
  const anchors = document.querySelectorAll<HTMLAnchorElement>('a[href^="#"]');
  anchors.forEach((anchor) => {
    anchor.addEventListener('click', (e) => {
      e.preventDefault();
      const href = (e.currentTarget as HTMLAnchorElement).getAttribute('href');
      if (!href) return;
      const target = document.querySelector<HTMLElement>(href);
      if (target) {
        target.scrollIntoView({ behavior: 'smooth', block: 'start' });
      }
    });
  });
</script>
</body>
</html>