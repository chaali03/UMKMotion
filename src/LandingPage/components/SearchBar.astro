<script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
<script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>

<!-- Search Section -->
<section class="search-section scroll-reveal">
  <div class="search-container">
    <div class="search-box">
      <div class="search-content">
        <div class="search-field">
          <svg class="search-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="11" cy="11" r="8"></circle>
            <path d="m21 21-4.35-4.35"></path>
          </svg>
          <input type="text" placeholder="Cari UMKM..." class="search-input" />
        </div>
        
        <div class="divider"></div>
        
        <div class="filter-field">
          <svg class="filter-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M3 6h18"></path>
            <path d="M7 12h10"></path>
            <path d="M10 18h4"></path>
          </svg>
          <select class="category-select">
            <option value="">Semua Kategori</option>
            <option value="kuliner">Kuliner</option>
            <option value="fashion">Fashion</option>
            <option value="kerajinan">Kerajinan</option>
            <option value="jasa">Jasa</option>
          </select>
        </div>
        
        <div class="divider"></div>
        
        <div class="location-field">
          <svg class="location-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"></path>
            <circle cx="12" cy="10" r="3"></circle>
          </svg>
          <select class="location-select">
            <option value="">Semua Lokasi</option>
            <option value="jakarta">Jakarta</option>
            <option value="bandung">Bandung</option>
            <option value="surabaya">Surabaya</option>
            <option value="yogyakarta">Yogyakarta</option>
          </select>
        </div>
        
        <button class="search-button">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="11" cy="11" r="8"></circle>
            <path d="m21 21-4.35-4.35"></path>
          </svg>
          Cari
        </button>
      </div>
    </div>
  </div>
</section>

<!-- Product Gallery Section with Horizontal Scroll -->
<section class="product-section">
  <div class="product-header-fixed">
    <div class="product-title">
      <h2>Hasil Produk UMKM</h2>
      <p>Jelajahi berbagai produk dari pengguna LinkUMKM</p>
    </div>
    <a href="#" class="see-all">
      Lihat Semua
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="9 18 15 12 9 6"></polyline>
      </svg>
    </a>
  </div>
  
  <div class="horizontal-scroll-wrapper">
    <div class="cards-container">
      
      <div class="card">
        <div class="product-icon">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#FF6B00" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2"></path>
            <path d="M7 2v20"></path>
            <path d="M21 15V2v0a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7"></path>
          </svg>
        </div>
        <h3>Kuliner</h3>
        <p class="product-count">13485 Produk</p>
      </div>
      
      <div class="card">
        <div class="product-icon">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#FF6B00" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 12h.01"></path>
            <path d="M16 6V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2"></path>
            <path d="M22 13a18.15 18.15 0 0 1-20 0"></path>
            <rect width="20" height="14" x="2" y="6" rx="2"></rect>
          </svg>
        </div>
        <h3>Jasa</h3>
        <p class="product-count">8284 Produk</p>
      </div>
      
      <div class="card">
        <div class="product-icon">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#FF6B00" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M6 19v-3"></path>
            <path d="M10 19v-3"></path>
            <path d="M14 19v-3"></path>
            <path d="M18 19v-3"></path>
            <path d="M8 11V9"></path>
            <path d="M16 11V9"></path>
            <rect width="18" height="18" x="3" y="3" rx="2"></rect>
          </svg>
        </div>
        <h3>Fashion & Aksesoris</h3>
        <p class="product-count">3829 Produk</p>
      </div>
      
      <div class="card">
        <div class="product-icon">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#FF6B00" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 2v20"></path>
            <path d="M2 12h20"></path>
            <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path>
          </svg>
        </div>
        <h3>Kerajinan/Kriya</h3>
        <p class="product-count">2824 Produk</p>
      </div>
      
      <div class="card">
        <div class="product-icon">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#FF6B00" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z"></path>
          </svg>
        </div>
        <h3>Kesehatan & Kecantikan</h3>
        <p class="product-count">2789 Produk</p>
      </div>
      
      <div class="card">
        <div class="product-icon">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#FF6B00" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z"></path>
            <path d="m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9"></path>
            <path d="M12 3v6"></path>
          </svg>
        </div>
        <h3>Pertanian & Perkebunan</h3>
        <p class="product-count">1815 Produk</p>
      </div>
      
      <div class="card">
        <div class="product-icon">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#FF6B00" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect width="16" height="20" x="4" y="2" rx="2" ry="2"></rect>
            <path d="M9 22v-4h6v4"></path>
            <path d="M8 6h.01"></path>
            <path d="M16 6h.01"></path>
            <path d="M12 6h.01"></path>
            <path d="M12 10h.01"></path>
            <path d="M12 14h.01"></path>
            <path d="M16 10h.01"></path>
            <path d="M16 14h.01"></path>
            <path d="M8 10h.01"></path>
            <path d="M8 14h.01"></path>
          </svg>
        </div>
        <h3>Komputer & Elektronik</h3>
        <p class="product-count">1419 Produk</p>
      </div>

      <div class="card">
        <div class="product-icon">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#FF6B00" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect width="18" height="18" x="3" y="3" rx="2"></rect>
            <path d="M3 9h18"></path>
            <path d="M9 21V9"></path>
          </svg>
        </div>
        <h3>Furniture</h3>
        <p class="product-count">1256 Produk</p>
      </div>

      <div class="card">
        <div class="product-icon">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#FF6B00" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20"></path>
          </svg>
        </div>
        <h3>Edukasi</h3>
        <p class="product-count">982 Produk</p>
      </div>

      <div class="card">
        <div class="product-icon">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#FF6B00" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="12" cy="12" r="10"></circle>
            <path d="M12 16v-4"></path>
            <path d="M12 8h.01"></path>
          </svg>
        </div>
        <h3>Lainnya</h3>
        <p class="product-count">756 Produk</p>
      </div>

    </div>
  </div>

  <div class="scroll-indicator">
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="9 18 15 12 9 6"></polyline>
    </svg>
    <span>Scroll untuk melihat lebih banyak</span>
  </div>
</section>

<style>
  /* Search Section Styles */
  .search-section {
    display: flex !important;
    visibility: visible !important;
    align-items: center;
    justify-content: center;
    padding: clamp(4rem, 10vw, 8rem) clamp(1.5rem, 4vw, 3rem) clamp(3rem, 8vw, 6rem);
    background: linear-gradient(135deg, #FF6B00 0%, #C41E3A 25%, #6B2C91 50%, #1E3A8A 75%, #0066CC 100%);
    position: relative;
    overflow: visible;
    width: 100%;
    margin: clamp(2rem, 5vw, 4rem) 0 0 0;
    z-index: 1;
  }
  
  .search-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(255,107,0,0.8) 0%, rgba(196,30,58,0.8) 25%, rgba(107,44,145,0.8) 50%, rgba(30,58,138,0.8) 75%, rgba(0,102,204,0.8) 100%);
    opacity: 0;
    transition: opacity 0.8s ease;
  }
  
  .scroll-reveal.revealed::before {
    opacity: 0.9;
  }
  
  .search-container {
    position: relative;
    z-index: 10;
    width: 100%;
    max-width: 900px;
    margin: 0 auto;
  }
  
  .search-box {
    background: rgba(255, 255, 255, 0.98);
    border-radius: clamp(1rem, 2vw, 1.5rem);
    padding: clamp(1rem, 2vw, 1.5rem);
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(10px);
  }
  
  .search-content {
    display: flex;
    align-items: center;
    gap: clamp(0.5rem, 1.5vw, 1rem);
    flex-wrap: wrap;
  }
  
  .search-field,
  .filter-field,
  .location-field {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    flex: 1;
    min-width: 150px;
  }
  
  .search-icon,
  .filter-icon,
  .location-icon {
    color: #64748b;
    flex-shrink: 0;
    width: 18px;
    height: 18px;
  }
  
  .search-input,
  .category-select,
  .location-select {
    border: none;
    outline: none;
    background: transparent;
    font-size: clamp(0.8rem, 1.2vw, 0.9rem);
    color: #1e293b;
    width: 100%;
    font-family: inherit;
    padding: 0.25rem 0;
  }
  
  .search-input::placeholder {
    color: #94a3b8;
  }
  
  .category-select,
  .location-select {
    cursor: pointer;
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%2364748b' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 0.5rem center;
    padding-right: 2rem;
  }
  
  .divider {
    width: 1px;
    height: 1.5rem;
    background: #e2e8f0;
    flex-shrink: 0;
  }
  
  .search-button {
    background: #FF6B00;
    color: white;
    border: none;
    border-radius: clamp(0.5rem, 1.5vw, 0.75rem);
    padding: clamp(0.5rem, 1.5vw, 0.75rem) clamp(1rem, 2vw, 1.5rem);
    font-size: clamp(0.8rem, 1.2vw, 0.9rem);
    font-weight: 600;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.4rem;
    transition: transform 0.2s ease, box-shadow 0.2s ease, background 0.2s ease;
    white-space: nowrap;
  }
  
  .search-button svg {
    width: 16px;
    height: 16px;
  }
  
  .search-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(255, 107, 0, 0.4);
    background: #FF7A1A;
  }
  
  .search-button:active {
    transform: translateY(0);
    background: #E55F00;
  }
  
  /* Scroll Reveal Animation - disabled for immediate visibility */
  .scroll-reveal {
    opacity: 1 !important;
    transform: translateY(0) !important;
  }
  
  .scroll-reveal.revealed {
    opacity: 1 !important;
    transform: translateY(0) !important;
  }
  
  .scroll-reveal .search-box {
    transform: translateY(0) scale(1) !important;
    opacity: 1 !important;
  }
  
  .scroll-reveal.revealed .search-box {
    transform: translateY(0) scale(1) !important;
    opacity: 1 !important;
  }

  /* Product Gallery Section - Horizontal Scroll */
  .product-section {
    position: relative;
    width: 100%;
    background: #ffffff;
    padding: clamp(3rem, 6vw, 5rem) 0;
    overflow: visible;
  }
  
  .product-header-fixed {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 clamp(1.5rem, 4vw, 3rem) clamp(2rem, 4vw, 3rem);
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 2rem;
    position: relative;
    z-index: 10;
  }
  
  .product-title h2 {
    font-size: clamp(1.5rem, 3vw, 2rem);
    font-weight: 700;
    color: #1e293b;
    margin: 0 0 0.5rem 0;
  }
  
  .product-title p {
    font-size: clamp(0.875rem, 1.5vw, 1rem);
    color: #64748b;
    margin: 0;
  }
  
  .see-all {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: #0066CC;
    text-decoration: none;
    font-weight: 600;
    font-size: clamp(0.875rem, 1.5vw, 1rem);
    white-space: nowrap;
    transition: gap 0.3s ease;
  }
  
  .see-all:hover { gap: 0.75rem; }
  .see-all svg { transition: transform 0.3s ease; }
  .see-all:hover svg { transform: translateX(3px); }

  .horizontal-scroll-wrapper {
    position: relative;
    width: 100%;
    overflow: visible;
    height: auto;
  }

  .cards-container {
    display: flex;
    gap: 2rem;
    padding: 2rem clamp(1.5rem, 4vw, 3rem);
    will-change: transform;
  }

  .card {
    flex: 0 0 auto;
    width: clamp(240px, 20vw, 280px);
    height: clamp(280px, 25vw, 320px);
    background: #ffffff;
    border-radius: 1.25rem;
    padding: 2rem 1.5rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    cursor: pointer;
    border: 2px solid #e2e8f0;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
    position: relative;
    overflow: hidden;
  }

  .card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(255,107,0,0.05) 0%, rgba(0,102,204,0.05) 100%);
    opacity: 0;
    transition: opacity 0.4s ease;
  }

  .card:hover {
    transform: translateY(-10px) scale(1.05);
    box-shadow: 0 20px 40px rgba(255, 107, 0, 0.2);
    border-color: #FF6B00;
  }

  .card:hover::before {
    opacity: 1;
  }
  
  .product-icon {
    width: 80px;
    height: 80px;
    background: #f8fafc;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1.5rem;
    transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
    position: relative;
    z-index: 1;
  }
  
  .product-icon svg {
    width: 48px;
    height: 48px;
    transition: all 0.4s ease;
  }
  
  .card:hover .product-icon {
    transform: scale(1.15) rotate(5deg);
    background: rgba(255, 107, 0, 0.1);
  }

  .card:hover .product-icon svg {
    stroke: #FF6B00;
    filter: drop-shadow(0 4px 8px rgba(255, 107, 0, 0.3));
  }
  
  .card h3 {
    font-size: clamp(1rem, 1.5vw, 1.125rem);
    font-weight: 600;
    color: #1e293b;
    margin: 0 0 0.75rem 0;
    line-height: 1.3;
    padding: 0 1rem;
    position: relative;
    z-index: 1;
    transition: color 0.3s ease;
  }

  .card:hover h3 {
    color: #FF6B00;
  }
  
  .product-count {
    font-size: clamp(0.8rem, 1.2vw, 0.875rem);
    color: #64748b;
    margin: 0;
    font-weight: 500;
    position: relative;
    z-index: 1;
    transition: color 0.3s ease;
  }

  .card:hover .product-count {
    color: #0066CC;
  }

  .scroll-indicator {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    padding: 2rem 0 1rem;
    color: #94a3b8;
    font-size: 0.875rem;
    animation: bounce 2s infinite;
  }

  .scroll-indicator svg {
    width: 20px;
    height: 20px;
  }

  @keyframes bounce {
    0%, 100% { transform: translateX(0); }
    50% { transform: translateX(10px); }
  }
  
  /* Responsive Design */
  @media (max-width: 1024px) {
    .search-content { gap: clamp(0.5rem, 1.5vw, 1rem); }
    .search-field, .filter-field, .location-field { min-width: 150px; }
    
    .card {
      width: clamp(220px, 22vw, 260px);
      height: clamp(260px, 27vw, 300px);
    }
  }
  
  @media (max-width: 768px) {
    .search-content {
      flex-direction: column;
      align-items: stretch;
    }
    .search-field, .filter-field, .location-field {
      width: 100%;
      min-width: unset;
    }
    .divider {
      width: 100%;
      height: 1px;
    }
    .search-button {
      width: 100%;
      justify-content: center;
    }
    .product-header-fixed {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .card {
      width: 200px;
      height: 240px;
    }

    .product-icon {
      width: 70px;
      height: 70px;
      margin-bottom: 1rem;
    }

    .product-icon svg {
      width: 40px;
      height: 40px;
    }
  }
  
  @media (max-width: 480px) {
    .search-section {
      padding: clamp(3rem, 6vw, 4rem) 0 clamp(2rem, 5vw, 3rem) 0;
      margin-top: clamp(1.5rem, 4vw, 2.5rem);
    }

    .card {
      width: 180px;
      height: 220px;
      padding: 1.5rem 1rem;
    }

    .product-icon {
      width: 60px;
      height: 60px;
    }

    .product-icon svg {
      width: 36px;
      height: 36px;
    }
  }
</style>

<script>
  // Type declarations for GSAP and ScrollTrigger
  type GSAP = typeof import('gsap').gsap;
  type ScrollTriggerType = typeof import('gsap/ScrollTrigger').ScrollTrigger;
  
  // Type assertions for global GSAP and ScrollTrigger
  const gsap = (window as any).gsap as GSAP;
  const ScrollTrigger = (window as any).ScrollTrigger as ScrollTriggerType;
  
  // Wait for GSAP to load first
  let retryCount = 0;
  const maxRetries = 10;
  
  function initScrollAnimation() {
    console.log('🚀 Initializing scroll animation... (attempt ' + (retryCount + 1) + ')');
    
    // Check if GSAP is loaded
    if (!gsap || !ScrollTrigger) {
      retryCount++;
      if (retryCount < maxRetries) {
        console.warn('⏳ GSAP not ready yet, retrying in 500ms...');
        setTimeout(initScrollAnimation, 500);
      } else {
        console.error('❌ GSAP failed to load after ' + maxRetries + ' attempts!');
        console.error('Check your internet connection or CDN availability');
      }
      return;
    }
    
    console.log('✅ GSAP loaded successfully!');
    // GSAP and ScrollTrigger are already available as consts
    
    // Register GSAP ScrollTrigger
    gsap.registerPlugin(ScrollTrigger);
    console.log('✅ ScrollTrigger registered');

    // Scroll reveal for search section
    const revealObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('revealed');
        }
      });
    }, {
      threshold: 0.15,
      rootMargin: '0px 0px -100px 0px'
    });
    
    const revealElements = document.querySelectorAll('.scroll-reveal');
    revealElements.forEach(el => revealObserver.observe(el));

    // Horizontal Scroll Animation - SIMPLIFIED VERSION
    console.log('🔍 Looking for gallery elements...');
    const wrapper = document.querySelector('.horizontal-scroll-wrapper');
    const cardsContainer = document.querySelector('.cards-container');
    const cards = document.querySelectorAll('.card');
    
    console.log('Wrapper:', wrapper);
    console.log('Container:', cardsContainer);
    console.log('Cards:', cards.length);
    
    if (!wrapper || !cardsContainer || cards.length === 0) {
      console.error('❌ Elements not found:', {
        wrapper: !!wrapper,
        container: !!cardsContainer,
        cards: cards.length
      });
      return;
    }
    
    console.log('✅ All elements found - Cards:', cards.length);
    
    // Tunggu sebentar untuk memastikan layout sudah stabil
    setTimeout(() => {
      const scrollWidth = cardsContainer.scrollWidth;
      const windowWidth = window.innerWidth;
      const scrollDistance = scrollWidth - windowWidth;
      
      console.log('📏 Measurements:');
      console.log('  - Scroll width:', scrollWidth + 'px');
      console.log('  - Window width:', windowWidth + 'px');
      console.log('  - Scroll distance:', scrollDistance + 'px');
      
      if (scrollDistance <= 0) {
        console.warn('⚠️ Not enough cards to scroll (distance:', scrollDistance + ')');
        return;
      }
      
      console.log('🎨 Creating horizontal scroll animation...');
      
      try {
        // Animasi horizontal scroll - FIXED VERSION
        const animation = gsap.to(cardsContainer, {
          x: -scrollDistance,  // Gunakan scrollDistance yang sudah dihitung
          ease: "none",
          scrollTrigger: {
            trigger: wrapper,
            start: "top top",
            end: () => `+=${scrollDistance * 2}`,  // End harus lebih panjang
            pin: true,
            scrub: 0.5,  // Lebih smooth
            markers: true,  // Enable markers untuk debug
            id: "horizontal-scroll",
            invalidateOnRefresh: true,
            anticipatePin: 1,
            onEnter: () => console.log('🎬 Animation ENTERED'),
            onLeave: () => console.log('🏁 Animation COMPLETED'),
            onEnterBack: () => console.log('⏪ Animation ENTER BACK'),
            onLeaveBack: () => console.log('⏮️ Animation LEAVE BACK'),
            onUpdate: (self) => {
              const progress = Math.round(self.progress * 100);
              const currentX = gsap.getProperty(cardsContainer, 'x');
              console.log('📊 Progress:', progress + '% | X position:', currentX);
            }
          }
        });
        
        console.log('✅ Animation created successfully!');
        
        // TEST: Manual animation untuk memastikan GSAP bisa gerakkan element
        console.log('🧪 Testing manual animation in 1 second...');
        setTimeout(() => {
          console.log('🧪 Starting manual test...');
          gsap.to(cardsContainer, {
            x: -100,
            duration: 1,
            ease: "power2.out",
            onStart: () => console.log('🧪 Manual animation started'),
            onUpdate: () => {
              const x = gsap.getProperty(cardsContainer, 'x');
              console.log('🧪 Manual X:', x);
            },
            onComplete: () => {
              console.log('✅ Manual test completed - element CAN move!');
              gsap.set(cardsContainer, { x: 0 }); // Reset position
              console.log('🔄 Position reset to 0');
            }
          });
        }, 1000);
        
        // Refresh on resize
        let resizeTimeout: number | undefined;
        window.addEventListener('resize', () => {
          if (resizeTimeout) window.clearTimeout(resizeTimeout);
          resizeTimeout = window.setTimeout(() => {
            console.log('📐 Window resized, refreshing ScrollTrigger...');
            ScrollTrigger.refresh();
          }, 250);
        });
        
      } catch (error) {
        console.error('❌ Error creating animation:', error);
      }
    }, 300);
  }
  
  // Start initialization when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initScrollAnimation);
  } else {
    // DOM already loaded
    initScrollAnimation();
  }
</script>