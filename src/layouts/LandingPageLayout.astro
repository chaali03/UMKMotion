---
import '../styles/global.css';

const { title = 'UMKMotion' } = Astro.props;
---
<html lang="en" class="intro-lock">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="apple-touch-icon" sizes="180x180" href="/favicon_io/apple-touch-icon.png?v=4" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon_io/favicon-32x32.png?v=4" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon_io/favicon-16x16.png?v=4" />
    <link rel="icon" type="image/png" sizes="192x192" href="/favicon_io/android-chrome-192x192.png?v=4" />
    <link rel="icon" type="image/png" sizes="512x512" href="/favicon_io/android-chrome-512x512.png?v=4" />
    <link rel="manifest" href="/favicon_io/site.webmanifest?v=4" />
    <link rel="shortcut icon" href="/favicon_io/favicon.ico?v=4" />
    <style>
      :root { 
        color-scheme: light dark;
        --container-padding: 16px;
        --container-max-width: 100%;
      }
      
      /* ========== BASE STYLES ========== */
      html { 
        overflow-y: scroll;
        scrollbar-gutter: stable;
        -webkit-text-size-adjust: 100%;
        text-size-adjust: 100%;
        -webkit-tap-highlight-color: transparent;
        /* Prevent horizontal scroll without using overflow-x:hidden */
        overflow-x: clip;
        width: 100%;
        max-width: 100%;
      }
      
      body { 
        margin: 0; 
        font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif; 
        width: 100%;
        box-sizing: border-box;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        font-size: 16px;
        line-height: 1.6;
        /* Prevent horizontal scroll */
        position: relative;
      }
      
      *, *::before, *::after {
        box-sizing: border-box;
      }
      
      /* Lock scroll while intro visible */
      html.intro-lock, body.intro-lock { 
        overscroll-behavior: none; 
        position: relative;
        height: 100%;
      }
      
      .app { 
        min-height: 100dvh;
        width: 100%;
        max-width: 100vw;
        position: relative;
        overflow-x: hidden;
      }
      
      /* Content reveal */
      main#content { opacity: 0; width: 100%; max-width: 100vw; overflow-x: hidden; }
      .container { padding: 24px; max-width: 1100px; margin-inline: auto; }
      
      /* ========== NAVBAR FIXES ========== */
      header.nav {
        width: 100%;
        max-width: 100vw;
      }
      
      header.nav * {
        box-sizing: border-box;
      }
      
      /* NAVBAR SIZE OVERRIDES (layout-only) */
      header.nav {
        /* shrink logo height globally from layout */
        --logo-h: clamp(18px, 2.6vw, 28px);
      }
      header.nav .container {
        padding: 2px 12px;
        gap: 6px;
      }
      header.nav .brand { font-size: 13px; }
      header.nav .menu { gap: 12px; }
      header.nav .menu a { font-size: 12px; padding: 6px 10px; border-radius: 10px; }
      header.nav .actions { gap: 8px; flex: 0 0 200px; }
      header.nav .btn { height: 30px; padding: 0 12px; font-size: 12px; border-radius: 10px; }
      header.nav .search { width: 22px; height: 22px; border-radius: 8px; }
      
      @media (max-width: 1024px) {
        header.nav .menu, header.nav .actions { display: none; }
      }
      
      /* ========== INTRO STYLES ========== */
      .intro { 
        position: fixed; 
        inset: 0; 
        display: grid; 
        place-items: center; 
        z-index: 50; 
        overflow: hidden;
        /* Solid white; gradients live only in Hero */
        background: #ffffff;
        transform: none;
        will-change: opacity;
      }
      
      .intro__stage { 
        position: relative; 
        display: grid; 
        place-items: center;
        perspective: 1200px;
        padding: clamp(12px, 4vw, 24px);
        width: fit-content;
        margin: 0 auto;
        max-width: 100%;
      }
      
      .intro__circles {
        display: none !important;
      }
      
      .circle {
        position: absolute;
        border-radius: 50%;
        opacity: 0;
        filter: blur(2px);
      }
      
      .circle--1 {
        width: 300px;
        height: 300px;
        background: linear-gradient(135deg, rgba(14,165,233,.12), rgba(245,158,11,.12));
        top: 20%;
        left: 15%;
      }
      
      .circle--2 {
        width: 400px;
        height: 400px;
        background: linear-gradient(225deg, rgba(14,165,233,.10), rgba(245,158,11,.10));
        bottom: 15%;
        right: 10%;
      }
      
      .circle--3 {
        width: 250px;
        height: 250px;
        background: linear-gradient(45deg, rgba(245,158,11,.12), rgba(251,191,36,.12));
        top: 50%;
        right: 20%;
      }
      
      .intro__logoWrap { 
        position: relative;
        transform-style: preserve-3d;
        width: fit-content;
        margin: 0 auto;
        max-width: 100%;
      }
      
      .intro__logo { 
        width: clamp(180px, 46vw, 580px); 
        height: auto; 
        object-fit: contain; 
        filter: drop-shadow(0 25px 50px rgba(0,0,0,.12)) drop-shadow(0 0 60px rgba(0,17,81,.18)) drop-shadow(0 0 40px rgba(253,87,1,.12)); 
        border-radius: 20px;
        will-change: transform, opacity;
        display: block;
        max-width: 100%;
      }

      .intro__text {
        position: absolute;
        bottom: -16%;
        left: 50%;
        transform: translate(-50%, 8px);
        font-weight: 800;
        font-size: clamp(18px, 3.8vw, 42px);
        letter-spacing: 0.4px;
        color: #0b1a34;
        text-shadow: 0 2px 16px rgba(0,0,0,.08);
        opacity: 0;
        pointer-events: none;
        white-space: nowrap;
      }
      
      .intro__sweep { 
        position: absolute; 
        inset: -10%; 
        background: linear-gradient(120deg, 
          rgba(0,17,81,0) 0%, 
          rgba(0,17,81,.18) 35%,
          rgba(253,87,1,.22) 52%, 
          rgba(0,17,81,.16) 68%,
          rgba(0,17,81,0) 100%); 
        transform: translateX(-200%) rotate(-5deg); 
        pointer-events: none;
        border-radius: 20px;
        filter: blur(20px);
      }
      
      .intro__ring {
        position: absolute;
        inset: -15%;
        border: 2px solid rgba(0,17,81,.35);
        border-radius: 24px;
        opacity: 0;
        pointer-events: none;
      }
      
      .intro__floaters {
        position: absolute;
        inset: 0;
        pointer-events: none;
      }
      
      .floater {
        position: absolute;
        background: linear-gradient(135deg, rgba(0,17,81,.7), rgba(253,87,1,.7));
        border-radius: 4px;
        opacity: 0;
        box-shadow: 0 4px 12px rgba(0,17,81,.28);
      }
      
      .intro__grid {
        position: absolute;
        inset: 0;
        pointer-events: none;
        opacity: 0;
      }
      
      .grid-line {
        position: absolute;
        background: linear-gradient(90deg, 
          transparent, 
          rgba(0,17,81,.18) 50%, 
          transparent);
        height: 1px;
      }
      
      .grid-line--v {
        width: 1px;
        height: 100%;
        background: linear-gradient(180deg, 
          transparent, 
          rgba(253,87,1,.22) 50%, 
          transparent);
      }
      
      /* ========== CONTENT STYLES ========== */
      main { 
        opacity: 0; 
        width: 100%;
        position: relative;
        z-index: 1;
      }
      
      .container { 
        padding: var(--container-padding) 0; /* vertical only by default */
        max-width: 100%;
        margin: 0; 
        width: 100%;
        box-sizing: border-box;
        /* Ensure consistent horizontal breathing room incl. safe areas */
        padding-left: max(var(--container-padding), env(safe-area-inset-left));
        padding-right: max(var(--container-padding), env(safe-area-inset-right));
      }

      /* Typography base */
      img, video, canvas, svg { 
        max-width: 100%; 
        height: auto; 
        display: block; 
      }
      
      /* Keep media responsive without constraining all elements */
      img, video, canvas, svg, picture, iframe {
        max-width: 100%;
        height: auto;
        display: block;
      }
      
      h1, h2, h3, h4, h5, h6 {
        margin: 0;
        font-weight: 700;
        line-height: 1.2;
        /* Prevent text from causing overflow */
        word-wrap: break-word;
        overflow-wrap: break-word;
      }

      p {
        margin: 0;
        /* Prevent text overflow */
        word-wrap: break-word;
        overflow-wrap: break-word;
      }

      /* ========== IMPROVED DESKTOP LAYOUT ========== */

      /* üñ•Ô∏è Small Desktop (1025px - 1280px) - FIXED */
      @media (min-width: 1025px) and (max-width: 1280px) {
        :root {
          --container-padding: clamp(32px, 3vw, 48px);
          --container-max-width: min(1200px, 92vw);
        }
        
        html, body {
          width: 100%;
          max-width: 100%;
          position: relative;
        }
        
        body { 
          font-size: clamp(16px, 1.1vw, 18px);
          line-height: 1.65;
        }
        
        /* Improved container constraints */
        .container {
          width: 100%;
          max-width: var(--container-max-width);
          margin: 0 auto;
          padding-left: max(var(--container-padding), env(safe-area-inset-left));
          padding-right: max(var(--container-padding), env(safe-area-inset-right));
        }
        
        /* Improved intro sizing */
        .intro__stage {
          max-width: min(600px, 70vw);
          padding: 24px 20px;
        }
        
        .intro__logo { 
          width: min(500px, 55vw); 
          max-width: 100%;
        }
        
        .intro__ring { 
          inset: -12%; 
          border-width: 1.9px; 
          border-radius: 26px; 
        }
        
        .intro__sweep { 
          inset: -9%; 
          filter: blur(18px); 
          border-radius: 26px; 
        }
        
        .grid-line, .grid-line--v { opacity: 0.8; }
        
        .intro__text {
          font-size: clamp(28px, 3.5vw, 36px);
          bottom: -18%;
        }

        /* Ensure all content stays within bounds */
        section, div, article, aside, header, footer {
          max-width: 100%;
          box-sizing: border-box;
        }
      }

      /* üñ•Ô∏è Medium Desktop (1281px - 1440px) - IMPROVED */
      @media (min-width: 1281px) and (max-width: 1440px) {
        :root {
          --container-padding: clamp(36px, 3.5vw, 60px);
          --container-max-width: min(1400px, 90vw);
        }
        
        html, body {
          width: 100%;
          max-width: 100%;
          position: relative;
        }
        
        body { 
          font-size: clamp(16px, 1.15vw, 19px);
          line-height: 1.7;
        }
        
        .container {
          width: 100%;
          max-width: var(--container-max-width);
          margin: 0 auto;
          padding-left: max(var(--container-padding), env(safe-area-inset-left));
          padding-right: max(var(--container-padding), env(safe-area-inset-right));
        }
        
        .intro__stage {
          max-width: min(700px, 65vw);
          padding: 28px 24px;
        }
        
        .intro__logo { 
          width: min(560px, 50vw); 
          max-width: 100%;
        }
        
        .intro__ring { 
          inset: -14%; 
          border-width: 2px; 
          border-radius: 27px; 
        }
        
        .intro__sweep { 
          inset: -11%; 
          filter: blur(19px); 
          border-radius: 27px; 
        }
        
        .grid-line, .grid-line--v { opacity: 0.85; }
        
        .intro__text {
          font-size: clamp(30px, 3.8vw, 38px);
          bottom: -20%;
        }

        h1 { font-size: clamp(2.5rem, 3.5vw, 3.5rem); }
        h2 { font-size: clamp(2rem, 2.8vw, 2.8rem); }
        h3 { font-size: clamp(1.75rem, 2.2vw, 2.2rem); }
        h4 { font-size: clamp(1.5rem, 1.8vw, 1.8rem); }
        h5 { font-size: clamp(1.25rem, 1.4vw, 1.4rem); }
        h6 { font-size: clamp(1.1rem, 1.2vw, 1.2rem); }
      }

      /* üñ•Ô∏è Large Desktop (1441px - 1680px) - IMPROVED */
      @media (min-width: 1441px) and (max-width: 1680px) {
        :root {
          --container-padding: 40px 0; /* Remove horizontal padding */
          --container-max-width: 100%;
        }
        
        html, body {
          width: 100%;
          max-width: 100%;
          position: relative;
        }
        
        body { 
          font-size: clamp(17px, 1.2vw, 20px);
          line-height: 1.7;
        }
        
        .container {
          width: 100%;
          max-width: var(--container-max-width);
          margin: 0 auto;
          padding-left: max(var(--container-padding), env(safe-area-inset-left));
          padding-right: max(var(--container-padding), env(safe-area-inset-right));
        }
        
        .intro__stage {
          max-width: min(800px, 60vw);
          padding: 32px 28px;
        }
        
        .intro__logo { 
          width: min(620px, 45vw); 
          max-width: 100%;
        }
        
        .intro__ring { 
          inset: -15%; 
          border-width: 2.1px; 
          border-radius: 28px; 
        }
        
        .intro__sweep { 
          inset: -12%; 
          filter: blur(20px); 
          border-radius: 28px; 
        }
        
        .grid-line, .grid-line--v { opacity: 0.9; }
        
        .intro__text {
          font-size: clamp(32px, 4vw, 40px);
          bottom: -22%;
        }

        h1 { font-size: clamp(2.75rem, 4vw, 4rem); }
        h2 { font-size: clamp(2.25rem, 3.2vw, 3.2rem); }
        h3 { font-size: clamp(1.875rem, 2.5vw, 2.5rem); }
        h4 { font-size: clamp(1.625rem, 2vw, 2rem); }
        h5 { font-size: clamp(1.375rem, 1.6vw, 1.6rem); }
        h6 { font-size: clamp(1.2rem, 1.4vw, 1.4rem); }
      }

      /* üñ•Ô∏è Extra Large Desktop (1681px - 1920px) - IMPROVED */
      @media (min-width: 1681px) and (max-width: 1920px) {
        :root {
          --container-padding: 48px 0; /* Remove horizontal padding */
          --container-max-width: 100%;
        }
        
        html, body {
          width: 100%;
          max-width: 100%;
          position: relative;
        }
        
        body { 
          font-size: clamp(17px, 1.25vw, 21px);
          line-height: 1.75;
        }
        
        .container {
          width: 100%;
          max-width: var(--container-max-width);
          margin: 0 auto;
          padding-left: max(var(--container-padding), env(safe-area-inset-left));
          padding-right: max(var(--container-padding), env(safe-area-inset-right));
        }
        
        .intro__stage {
          max-width: min(900px, 55vw);
          padding: 36px 32px;
        }
        
        .intro__logo { 
          width: min(680px, 40vw); 
          max-width: 100%;
        }
        
        .intro__ring { 
          inset: -16%; 
          border-width: 2.2px; 
          border-radius: 29px; 
        }
        
        .intro__sweep { 
          inset: -13%; 
          filter: blur(21px); 
          border-radius: 29px; 
        }
        
        .grid-line, .grid-line--v { opacity: 0.95; }
        
        .intro__text {
          font-size: clamp(34px, 4.2vw, 42px);
          bottom: -24%;
        }

        h1 { font-size: clamp(3rem, 4.5vw, 4.5rem); }
        h2 { font-size: clamp(2.5rem, 3.5vw, 3.5rem); }
        h3 { font-size: clamp(2rem, 2.8vw, 2.8rem); }
        h4 { font-size: clamp(1.75rem, 2.2vw, 2.2rem); }
        h5 { font-size: clamp(1.5rem, 1.8vw, 1.8rem); }
        h6 { font-size: clamp(1.3rem, 1.5vw, 1.5rem); }
      }

      /* ========== MOBILE BREAKPOINTS (tetap sama) ========== */
      /* üì± Extra Small Mobile (up to 320px) */
      @media (max-width: 320px) {
        :root {
          --container-padding: 12px;
          --container-max-width: 100%;
        }
        
        body { font-size: 14px; }
        
        .intro__stage {
          padding: 6px 4px;
          max-width: 98vw;
        }
        
        .intro { padding: 2px; }
        .intro__logo { width: 90vw; max-width: 260px; }
        .intro__ring { inset: -6%; border-width: 0.75px; border-radius: 16px; }
        .intro__sweep { inset: -3%; filter: blur(8px); border-radius: 16px; }
        .grid-line, .grid-line--v { opacity: 0.3; }
        
        .intro__text {
          font-size: clamp(16px, 3.5vw, 20px);
          bottom: -14%;
        }
      }

      /* üì± Small Mobile (321px - 375px) */
      @media (min-width: 321px) and (max-width: 375px) {
        :root {
          --container-padding: 14px;
          --container-max-width: 100%;
        }
        
        body { font-size: 15px; }
        
        .intro__stage {
          padding: 8px 6px;
          max-width: 96vw;
        }
        
        .intro { padding: 4px; }
        .intro__logo { width: 88vw; max-width: 280px; }
        .intro__ring { inset: -7%; border-width: 1px; border-radius: 18px; }
        .intro__sweep { inset: -4%; filter: blur(10px); border-radius: 18px; }
        .grid-line, .grid-line--v { opacity: 0.4; }
        
        .intro__text {
          font-size: clamp(17px, 3.6vw, 22px);
        }
      }

      /* üì± Standard Mobile (376px - 428px) */
      @media (min-width: 376px) and (max-width: 428px) {
        :root {
          --container-padding: 16px;
          --container-max-width: 100%;
        }
        
        body { font-size: 15px; }
        
        .intro__stage {
          padding: 10px 8px;
          max-width: 94vw;
        }
        
        .intro { padding: 6px; }
        .intro__logo { width: 85vw; max-width: 320px; }
        .intro__ring { inset: -8%; border-width: 1.25px; border-radius: 20px; }
        .intro__sweep { inset: -5%; filter: blur(12px); border-radius: 20px; }
        .grid-line, .grid-line--v { opacity: 0.5; }
        
        .intro__text {
          font-size: clamp(18px, 3.7vw, 24px);
        }
      }

      /* üì± Large Mobile (429px - 480px) */
      @media (min-width: 429px) and (max-width: 480px) {
        :root {
          --container-padding: 18px;
          --container-max-width: 100%;
        }
        
        body { font-size: 16px; }
        
        .intro__stage {
          padding: 12px 10px;
          max-width: 92vw;
        }
        
        .intro { padding: 8px; }
        .intro__logo { width: 82vw; max-width: 340px; }
        .intro__ring { inset: -9%; border-width: 1.5px; border-radius: 21px; }
        .intro__sweep { inset: -6%; filter: blur(13px); border-radius: 21px; }
        .grid-line, .grid-line--v { opacity: 0.55; }
        
        .intro__text {
          font-size: clamp(19px, 3.8vw, 26px);
        }
      }

      /* üì± Phablet (481px - 600px) */
      @media (min-width: 481px) and (max-width: 600px) {
        :root {
          --container-padding: 20px;
          --container-max-width: 100%;
        }
        
        body { font-size: 16px; }
        
        .intro__stage {
          padding: 14px 12px;
          max-width: 90vw;
        }
        
        .intro { padding: 10px; }
        .intro__logo { width: 78vw; max-width: 380px; }
        .intro__ring { inset: -10%; border-width: 1.6px; border-radius: 22px; }
        .intro__sweep { inset: -7%; filter: blur(14px); border-radius: 22px; }
        .grid-line, .grid-line--v { opacity: 0.6; }
        
        .intro__text {
          font-size: clamp(20px, 3.9vw, 28px);
        }
      }

      /* üìü Small Tablet (601px - 768px) */
      @media (min-width: 601px) and (max-width: 768px) {
        :root {
          --container-padding: 24px;
          --container-max-width: min(98vw, 1100px);
        }
        
        body { font-size: 16px; }
        
        .intro__stage {
          padding: 16px 14px;
          max-width: 88vw;
        }
        
        .intro { padding: 12px; }
        .intro__logo { width: 75vw; max-width: 420px; }
        .intro__ring { inset: -11%; border-width: 1.7px; border-radius: 23px; }
        .intro__sweep { inset: -8%; filter: blur(15px); border-radius: 23px; }
        .grid-line, .grid-line--v { opacity: 0.65; }
        
        .intro__text {
          font-size: clamp(22px, 4vw, 32px);
        }
      }

      /* üíä Standard Tablet (769px - 834px) */
      @media (min-width: 769px) and (max-width: 834px) {
        :root {
          --container-padding: 28px;
          --container-max-width: min(96vw, 1200px);
        }
        
        body { font-size: 16px; }
        
        .intro__stage {
          padding: 18px 16px;
          max-width: 85vw;
        }
        
        .intro__logo { width: 70vw; max-width: 480px; }
        .intro__ring { inset: -12%; border-width: 1.75px; border-radius: 24px; }
        .intro__sweep { inset: -9%; filter: blur(16px); border-radius: 24px; }
        .grid-line, .grid-line--v { opacity: 0.7; }
        
        .intro__text {
          font-size: clamp(24px, 4.1vw, 34px);
        }
      }

      /* üíä Large Tablet (835px - 1024px) */
      @media (min-width: 835px) and (max-width: 1024px) {
        :root {
          --container-padding: 32px;
          --container-max-width: min(94vw, 1400px);
        }
        
        body { font-size: 16px; }
        
        .intro__stage {
          padding: 20px 18px;
          max-width: 80vw;
        }
        
        .intro__logo { width: 65vw; max-width: 520px; }
        .intro__ring { inset: -13%; border-width: 1.8px; border-radius: 25px; }
        .intro__sweep { inset: -10%; filter: blur(17px); border-radius: 25px; }
        .grid-line, .grid-line--v { opacity: 0.75; }
        
        .intro__text {
          font-size: clamp(26px, 4.2vw, 36px);
        }
      }

      /* ========== LARGER DESKTOPS (tetap sama) ========== */
      /* üñ•Ô∏è Full HD+ (1921px - 2560px) */
      @media (min-width: 1921px) and (max-width: 2560px) {
        :root {
          --container-padding: clamp(56px, 5vw, 128px);
          --container-max-width: min(90vw, 2800px);
        }
        
        html, body {
          width: 100%;
          max-width: 100%;
        }
        
        body { 
          font-size: clamp(18px, 1.3vw, 22px);
          line-height: 1.75;
        }
        
        .intro__stage {
          max-width: min(60vw, 1200px);
          padding: 32px 28px;
        }
        
        .intro__logo { width: 40vw; max-width: 800px; }
        .intro__ring { inset: -18%; border-width: 2.5px; border-radius: 30px; }
        .intro__sweep { inset: -15%; filter: blur(22px); border-radius: 30px; }
        .grid-line, .grid-line--v { opacity: 1; }
        
        .intro__text {
          font-size: clamp(36px, 4.7vw, 46px);
        }

        h1 { font-size: clamp(3.25rem, 5.5vw, 5.5rem); }
        h2 { font-size: clamp(2.75rem, 4vw, 4rem); }
        h3 { font-size: clamp(2.25rem, 3.25vw, 3.25rem); }
        h4 { font-size: clamp(1.875rem, 2.75vw, 2.75rem); }
        h5 { font-size: clamp(1.625rem, 2.25vw, 2.25rem); }
        h6 { font-size: clamp(1.4rem, 1.8vw, 1.8rem); }

        button, .button, a.button {
          font-size: clamp(1.1rem, 1.3vw, 1.5rem);
          padding: clamp(14px, 1.5vw, 22px) clamp(28px, 2.5vw, 44px);
        }
      }

      /* üñ•Ô∏è 2K Display (2561px - 3440px) */
      @media (min-width: 2561px) and (max-width: 3440px) {
        :root {
          --container-padding: clamp(64px, 5.5vw, 144px);
          --container-max-width: min(88vw, 3200px);
        }
        
        html, body {
          width: 100%;
          max-width: 100%;
        }
        
        body { 
          font-size: clamp(19px, 1.35vw, 24px);
          line-height: 1.8;
        }

        h1 { font-size: clamp(3.5rem, 6vw, 6rem); }
        h2 { font-size: clamp(3rem, 4.5vw, 4.5rem); }
        h3 { font-size: clamp(2.5rem, 3.5vw, 3.5rem); }
        h4 { font-size: clamp(2rem, 3vw, 3rem); }
        h5 { font-size: clamp(1.75rem, 2.5vw, 2.5rem); }
        h6 { font-size: clamp(1.5rem, 2vw, 2rem); }

        button, .button, a.button {
          font-size: clamp(1.2rem, 1.4vw, 1.6rem);
          padding: clamp(16px, 1.8vw, 24px) clamp(32px, 3vw, 48px);
        }
      }

      /* üñ•Ô∏è Ultra-wide / 4K (3441px and above) */
      @media (min-width: 3441px) {
        :root {
          --container-padding: clamp(80px, 6vw, 160px);
          --container-max-width: min(86vw, 3600px);
        }
        
        html, body {
          width: 100%;
          max-width: 100%;
        }
        
        body { 
          font-size: clamp(20px, 1.4vw, 26px);
          line-height: 1.8;
        }

        h1 { font-size: clamp(4rem, 6.5vw, 7rem); }
        h2 { font-size: clamp(3.25rem, 5vw, 5rem); }
        h3 { font-size: clamp(2.75rem, 4vw, 4rem); }
        h4 { font-size: clamp(2.25rem, 3.25vw, 3.25rem); }
        h5 { font-size: clamp(1.875rem, 2.75vw, 2.75rem); }
        h6 { font-size: clamp(1.625rem, 2.25vw, 2.25rem); }

        button, .button, a.button {
          font-size: clamp(1.3rem, 1.5vw, 1.8rem);
          padding: clamp(18px, 2vw, 28px) clamp(36px, 3.5vw, 56px);
        }
      }

      /* ========== UTILITY STYLES ========== */
      /* Reduced motion support */
      @media (prefers-reduced-motion: reduce) {
        .intro { display: grid; }
        main { opacity: 1; }
        
        *, *::before, *::after {
          animation-duration: 0.01ms !important;
          animation-iteration-count: 1 !important;
          transition-duration: 0.01ms !important;
        }
      }

      /* Safe area insets for modern devices with notches */
      @supports(padding: max(0px)) {
        @media (max-width: 1024px) {
          .container {
            padding-left: max(var(--container-padding), env(safe-area-inset-left));
            padding-right: max(var(--container-padding), env(safe-area-inset-right));
          }
        }
      }

      /* Print styles */
      @media print {
        .intro { display: none !important; }
        main { opacity: 1 !important; }
        body { font-size: 12pt; }
      }

      /* High contrast mode support */
      @media (prefers-contrast: high) {
        .intro__logo {
          filter: contrast(1.2) drop-shadow(0 4px 8px rgba(0,0,0,.3));
        }
      }

      /* Dark mode support (optional - add if needed) */
      @media (prefers-color-scheme: dark) {
        .intro {
          background: #0a0a0a;
        }
        
        .intro__text {
          color: #ffffff;
          text-shadow: 0 2px 16px rgba(255,255,255,.2);
        }
      }
    </style>
  </head>
  <body class="intro-lock">
    <div id="intro" class="intro" aria-hidden="true">
      <div class="intro__stage">
        
        <!-- Grid lines -->
        <div class="intro__grid" id="grid">
          <div class="grid-line" style="top: 20%; width: 100%;"></div>
          <div class="grid-line" style="top: 50%; width: 100%;"></div>
          <div class="grid-line" style="top: 80%; width: 100%;"></div>
          <div class="grid-line grid-line--v" style="left: 25%;"></div>
          <div class="grid-line grid-line--v" style="left: 50%;"></div>
          <div class="grid-line grid-line--v" style="left: 75%;"></div>
        </div>
        
        <!-- Floating elements -->
        <div class="intro__floaters" id="floaters"></div>
        
        <div class="intro__logoWrap">
          <div class="intro__ring"></div>
          <img id="introLogo" class="intro__logo" src="/logo.png" alt="UMKMotion logo" />
          <div class="intro__sweep"></div>
          <div id="introText" class="intro__text">{title}</div>
        </div>
      </div>
    </div>
    <div class="app">
      <main id="content">
        <slot />
      </main>
    </div>

    <script type="module">
      import gsap from 'https://cdn.jsdelivr.net/npm/gsap@3.12.5/index.js';

      // Check if intro has been seen before
      const introSeen = document.cookie.split('; ').find(row => row.startsWith('introSeen='));
      if (introSeen) {
        // Skip intro if already seen
        document.documentElement.classList.remove('intro-lock');
        document.body.classList.remove('intro-lock');
        const content = document.getElementById('content');
        if (content) content.style.opacity = '1';
        const intro = document.getElementById('intro');
        if (intro) intro.style.display = 'none';
      } else {
        // Run intro animation if not seen
        document.documentElement.classList.add('intro-lock');
        document.body.classList.add('intro-lock');
        
        // Lock scroll without hiding scrollbar (prevents layout width jump)
        const __scrollY = window.scrollY || window.pageYOffset || 0;
        document.body.dataset.lockScrollY = String(__scrollY);
        document.body.style.position = 'fixed';
        document.body.style.top = `-${__scrollY}px`;
        document.body.style.left = '0';
        document.body.style.right = '0';
        document.body.style.width = '100%';
        
        const intro = document.getElementById('intro');
        const logo = document.getElementById('introLogo');
        const content = document.getElementById('content');
        const circles = document.querySelectorAll('.circle');
        const sweep = document.querySelector('.intro__sweep');
        const ring = document.querySelector('.intro__ring');
        const grid = document.getElementById('grid');
        const floatersContainer = document.getElementById('floaters');
        const logoWrap = document.querySelector('.intro__logoWrap');

        // Preload optional second logo
        async function loadSecondLogo() {
          const candidates = ['/logo2.png', '/logo2.jpg', '/logo2.jpeg', '/logo2.webp', '/logo2.svg'];
          for (const src of candidates) {
            try {
              const resp = await fetch(src, { method: 'HEAD' });
              if (resp.ok) {
                const img = new Image();
                img.id = 'introLogo2';
                img.className = 'intro__logo';
                img.src = src;
                img.alt = 'UMKMotion logo 2';
                img.style.position = 'absolute';
                img.style.inset = '0';
                img.style.margin = 'auto';
                img.style.opacity = '0';
                logoWrap.appendChild(img);
                await new Promise((res)=>{ img.onload = res; img.onerror = res; });
                
                const cs = getComputedStyle(logo);
                const rect = logo.getBoundingClientRect();
                img.style.width = rect.width ? `${rect.width}px` : cs.width;
                img.style.height = rect.height ? `${rect.height}px` : cs.height;
                img.style.objectFit = 'contain';
                img.style.borderRadius = cs.borderRadius;
                img.style.zIndex = '2';
                return img;
              }
            } catch (_) {}
          }
          return null;
        }

        const logo2 = await loadSecondLogo();

        // Create floating elements
        const floaterCount = 12;
        const floaters = [];
        for (let i = 0; i < floaterCount; i++) {
          const f = document.createElement('div');
          f.className = 'floater';
          const size = Math.random() * 8 + 4;
          f.style.width = `${size}px`;
          f.style.height = `${size}px`;
          f.style.left = `${Math.random() * 100}%`;
          f.style.top = `${Math.random() * 100}%`;
          f.style.transform = `rotate(${Math.random() * 360}deg)`;
          floatersContainer.appendChild(f);
          floaters.push(f);
        }

        // Initial states
        gsap.set(content, { opacity: 0 });
        gsap.set(logo, { opacity: 0, scale: 0.6, rotationY: -25 });
        if (logo2) gsap.set(logo2, { opacity: 0, scale: 1.02 });
        if (circles.length) gsap.set(circles, { opacity: 0, scale: 0.5 });
        gsap.set(ring, { opacity: 0, scale: 0.8 });
        gsap.set(grid, { opacity: 0 });
        gsap.set(floaters, { opacity: 0, scale: 0 });

        const tl = gsap.timeline({ 
          defaults: { ease: 'power3.out' }
        });

        // Animation sequence
        tl.to(grid, { opacity: 1, duration: 0.8, ease: 'power2.inOut' });

        if (circles.length) {
          tl.to(circles, {
            opacity: 1,
            scale: 1,
            duration: 1.2,
            stagger: 0.15,
            ease: 'elastic.out(1, 0.6)'
          }, '-=0.4');
        }

        tl.to(floaters, {
          opacity: 1,
          scale: 1,
          duration: 0.8,
          stagger: { each: 0.05, from: 'center' },
          ease: 'back.out(2)'
        }, '-=0.6')
        
        .to(logo, {
          opacity: 1,
          scale: 1.15,
          rotationY: 0,
          duration: 1.2,
          ease: 'power4.out'
        }, '-=0.5')
        
        .to(ring, {
          opacity: 1,
          scale: 1.2,
          duration: 0.8,
          ease: 'power2.out'
        }, '<0.2')
        .to(ring, {
          scale: 1.4,
          opacity: 0,
          duration: 0.8,
          ease: 'power2.in'
        })
        
        .fromTo(sweep, 
          { x: '-200%', rotation: -5 }, 
          { x: '200%', rotation: 5, duration: 1.4, ease: 'power2.inOut' }, 
          '<-0.3'
        )
        
        .call(() => {
          if (logo2) {
            // Match size to current rendered logo size
            const rectNow = logo.getBoundingClientRect();
            logo2.style.width = `${rectNow.width}px`;
            logo2.style.height = `${rectNow.height}px`;

            // Copy current transform/origin to ensure same 3D state
            const csLogo = getComputedStyle(logo);
            logo2.style.transform = csLogo.transform !== 'none' ? csLogo.transform : '';
            logo2.style.transformOrigin = csLogo.transformOrigin || '50% 50%';
            logo.style.transformOrigin = csLogo.transformOrigin || '50% 50%';

            // Compute exact horizontal delta to perfectly overlap centers
            const r1 = logo.getBoundingClientRect();
            const r2 = logo2.getBoundingClientRect();
            const deltaX = (r1.left + r1.width / 2) - (r2.left + r2.width / 2);
            gsap.set(logo2, { x: deltaX });

            // Crossfade
            gsap.to(logo, { opacity: 0, duration: 0.35, ease: 'power2.out' });
            gsap.to(logo2, { opacity: 1, duration: 0.45, ease: 'power2.out' });
          }
        }, null, '<0.7')
        
        .add(() => {
          const L2 = document.getElementById('introLogo2');
          const active = L2 && getComputedStyle(L2).opacity !== '0' ? L2 : logo;
          gsap.to(active, { scale: 1, duration: 0.7, ease: 'elastic.out(1, 0.5)' });
        }, '-=0.5')

        if (circles.length) {
          tl.to(circles, {
            scale: 1.15,
            duration: 1.5,
            stagger: 0.1,
            ease: 'sine.inOut',
            yoyo: true,
            repeat: 1
          }, '-=0.8');
        }

        tl.to(floaters, {
          y: '+=60',
          x: (i) => (Math.random() - 0.5) * 40,
          rotation: '+=180',
          opacity: 0,
          duration: 1.2,
          stagger: { each: 0.03, from: 'random' },
          ease: 'power2.inOut'
        }, '-=1')
        
        .to(content, {
          opacity: 1,
          duration: 1,
          ease: 'power3.out'
        }, '-=0.6')
        
        .to([intro, grid], { opacity: 0, duration: 1, ease: 'power2.inOut' }, '-=0.3')
        .set(intro, { display: 'none' })
        .add(() => {
          // restore scroll
          const y = parseInt(document.body.dataset.lockScrollY || '0', 10) || 0;
          document.body.style.position = '';
          document.body.style.top = '';
          document.body.style.left = '';
          document.body.style.right = '';
          document.body.style.width = '';
          delete document.body.dataset.lockScrollY;
          window.scrollTo(0, y);
          document.documentElement.classList.remove('intro-lock');
          document.body.classList.remove('intro-lock');
          // Set permanent cookie that intro has been seen
          document.cookie = 'introSeen=true; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/';
        });
      }
    </script>
  </body>
</html>